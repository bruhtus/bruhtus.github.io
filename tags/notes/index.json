[{"ref":"https://bruhtus.github.io/posts/postgres-delete-using/","title":"Postgresql's Clause USING on DELETE Statement","section":"posts","tags":["Notes"],"date":"2023.06.01","body":"A Brief Intro The USING clause on DELETE statement is basically let us join multiple table and delete only the data from those join.\nIf you ever use mysql DELETE JOIN with INNER JOIN, then postgresql USING is kind of similar to that except it can only delete from one table by default.\nHow? How to do that? Here\u0026rsquo;s an example:\nLet\u0026rsquo;s say we have table A and table B which is referenced to table C by id. If we use SELECT statement on table C with INNER JOIN on table A, it would look like this:\nSELECT*FROMCINNERJOINAONA.C_id=C.id;Now, if we want to only delete all records from table C related to table A without deleting all records from table C related to table B, we can use DELETE with USING clause like this:\nDELETEFROMCUSINGAWHEREA.C_id=C.id; Please keep in mind that if you haven\u0026rsquo;t set the ON DELETE CASCADE for table A on reference C_id, that query will throw an error.\n Alright, that\u0026rsquo;s it. See you next time!\nReferences  Postgresql delete documentation . Postgresql delete using tutorial . MySQL delete join tutorial .  "},{"ref":"https://bruhtus.github.io/posts/docker-compose-down-without-yaml-file/","title":"Docker Compose Down Without Yaml File","section":"posts","tags":["Notes","Linux"],"date":"2023.03.22","body":"A Brief Intro Have you ever feel that you have too much docker container from spin up a bunch of docker-compose.yaml file? And when you want to take down all those docker container from the docker-compose.yml, you already delete the file?\nIf that\u0026rsquo;s the case, then this post might be for you.\nBefore we start, we will be using docker compose version 2.16.0 in this post. If you are using the older version of docker compose, then this method might not work. Please keep that in mind.\nCheck Docker Compose Project Name The first thing we need to do is to check the project name. We can do that with command:\ndocker-compose ls or if we use docker compose v2, we can use this command instead:\ndocker compose ls If the container already stopped, we can use flags -a or --all like this:\ndocker-compose ls -a or this:\ndocker compose ls -a By default, docker compose will use the docker-compose.yml directory name as project name. We can specify the project name with flag -p or --project-name like this:\ndocker-compose -p anu up -d or this:\ndocker compose -p anu up -d Please keep in mind that we need to use the flags -p or --project-name before the command such as up or down.\nTake Down Docker Compose Component After we know the project name, we can take down all docker component when we spin up the docker container from docker-compose.yml. The component in here means volume, network, or anything that we define inside docker-compose.yml.\nTo take down component from docker compose without the docker-compose.yml, we can use this command:\ndocker-compose -p project-name down \u0026lt;docker-compose-down-flags\u0026gt; or this:\ndocker compose -p project-name down \u0026lt;docker-compose-down-flags\u0026gt; For example, let\u0026rsquo;s say we want to take down docker component from project anu and also remove the volume from those project. We can do that with this command:\ndocker-compose -p anu down -v or this:\ndocker compose -p anu down -v Alright, that\u0026rsquo;s it!\nI am not sure since when the ls command appear in docker compose, so just to be safe i recommend using at least docker compose version 2.16.0.\nSide Note I\u0026rsquo;ve tried this method with docker compose version 1.18.0, but failed. After i downloaded the docker compose binary version 2.16.0 from github, i can use this method.\nStill not sure what was wrong. When i use command docker-compose --help, the flag -p in there. But when i actually spin up a new docker instance with command:\ndocker-compose -p project-name up -d service-name and then tried to take it down with command:\ndocker-compose -p project-name down -v i got an error docker-compose.yml not found or along those lines.\nIf someone know what\u0026rsquo;s going on, please let me know!\n"},{"ref":"https://bruhtus.github.io/posts/simple-guide-qmk-flashing-cli/","title":"Simple Guide Flashing Mechanical Keyboard with QMK Cli","section":"posts","tags":["Notes","Linux"],"date":"2023.02.26","body":"A Brief Intro So recently, around the time i wrote this post, i need to flash my mechanical keyboard. The harsh thing is that, the GUI QMK toolbox only available on windows and macOS, meanwhile i use linux.\nSo, i need to use the QMK CLI to flash my mechanical keyboard. This post is some kind of notes for my future self.\n\u0026ldquo;Humans live by forgetting\u0026rdquo;, some people said. Without further ado, let\u0026rsquo;s get started!\nInstall QMK Firmware First thing first, we need to check if QMK firmware already installed on our system. We can do that with the command below:\ncommand -v qmk If the output is empty, then we need to install QMK firmware first. If the output is not empty, we can skip this process.\nThere\u0026rsquo;s a newbie guide on how to install QMK firmware on linux, we can them out here .\nThere are a few options to install QMK firmware on linux. We can install QMK firmware with our linux distro package manager or from python pip.\nIn this post, we will use python pipx to install QMK firmware. We can install QMK firmware from python pipx with this command:\npipx install qmk  Make sure you already have pipx installed on your machine.\n Follow the instruction from the installation process, including installing dependencies on your system and copy the 50-qmk.rules to /etc/udev/rules.d/.\n Copying the 50-qmk.rules make QMK can detect the bootloader of our mechanical keyboard. If we didn\u0026rsquo;t do that, even if our mechanical keyboard already in bootloader mode, QMK won\u0026rsquo;t be able to detect our mechanical keyboard.\n After we install QMK firmware, we need to setup the QMK CLI. We can do that with this command:\nqmk setup By default, the installation directory will be on our home directory. Personally i don\u0026rsquo;t really want to put the QMK installation on my home directory, so i added -H flag to move the installation directory to somewhere else, like this:\nqmk setup -H all-repos/qmk_firmware If the setup already finished, try running:\nqmk doctor and see if there\u0026rsquo;s any issue with the installation.\nFlashing with QMK CLI There\u0026rsquo;s a newbie guide on how to flash our mechanical keyboard using QMK CLI, we can find it here .\nThe point is, we need to know if our mechanical keyboard supported by QMK. We can check the supported mechanical keyboard here .\nLet\u0026rsquo;s say our mechanical keyboard is dz60rgb with ansi layout version 1, we can flash our mechanical keyboard with this command:\nqmk flash -kb dztech/dz60rgb_ansi/v1 -km default  For more info about the flags, we can use qmk flash --help.\n Unfortunately, my current mechanical keyboard is not supported, which is synthesis60 version 2. I need to get the hex file from the mechanical keyboard designer (and fortunately he\u0026rsquo;s within reach).\n In case you also need the synthesis60 version 2 hex file, you can check it here .\n So, to use our own hex file rather than using the default that QMK supported, we can use this command:\nqmk flash \u0026lt;path-to-hex-file\u0026gt; Here\u0026rsquo;s an example:\nqmk flash ~/downloads/dyz_synthesis60_atmega_vial.hex All right, that\u0026rsquo;s it from me. See you next time!\nReferences  QMK newbie getting started guide . QMK newbie flashing guide . Using QMK flash with the external file .  "},{"ref":"https://bruhtus.github.io/posts/remove-specific-line-in-vim/","title":"Remove Specific Line in Vim","section":"posts","tags":["Notes","Vim"],"date":"2022.09.03","body":"A Brief Intro In this post, we will talk about how to remove specific line in vim. We will be using this javascript snippet code as an example:\nconst app = require(\u0026#39;./jest-example\u0026#39;); const math = require(\u0026#39;./math\u0026#39;); describe(\u0026#39;app operation\u0026#39;, () =\u0026gt; { const multiplyMock = jest.spyOn(math, \u0026#39;multiply\u0026#39;); multiplyMock.mockReturnValue(\u0026#39;itu\u0026#39;); test(\u0026#39;call math.add()\u0026#39;, () =\u0026gt; { const add = jest.spyOn(math, \u0026#39;add\u0026#39;); add.mockImplementation(() =\u0026gt; \u0026#39;anu\u0026#39;); console.log(app.doAdd(1, 2)); expect(app.doAdd(1, 2)).toBe(\u0026#39;anu\u0026#39;); add.mockRestore(); console.log(app.doAdd(1, 2)); expect(app.doAdd(1, 2)).toBe(3); }); test(\u0026#39;call math.subtract()\u0026#39;, () =\u0026gt; { const subtract = jest.spyOn(math, \u0026#39;subtract\u0026#39;); subtract.mockImplementation(() =\u0026gt; \u0026#39;nganu\u0026#39;); console.log(app.doSubtract(1, 2)); expect(app.doSubtract(1, 2)).toBe(\u0026#39;nganu\u0026#39;); }); test(\u0026#39;call math.subtract() again\u0026#39;, () =\u0026gt; { console.log(app.doSubtract(1, 2)); }); test(\u0026#39;call math.multiply()\u0026#39;, () =\u0026gt; { console.log(app.doMultiply(1, 2)); }); }); And the goal is to remove line that has console.log() in it. Let\u0026rsquo;s get started!\nGlobal Command The first solution is that, we can use global command to delete the line that has console.log() like this:\n:g/console.log/dPlease keep in mind that the term delete in vim, means cut. So, rather than deleting the content, vim will put that into the unnamed register. For more info about unnamed register, we can check on :help registers.\nSo, if we didn\u0026rsquo;t want to clutter our unnamed register, we can use black hole register (yup, that\u0026rsquo;s a thing) which actually delete rather than cut like this:\n:g/console.log/d_On a side note, we don\u0026rsquo;t need to use / as the separator between command and pattern, we can use most characters except \\, \u0026quot;, or |. If we use vim9 script, we can use # as a separator either, so please keep that in mind. For more info, we can check on :help pattern-delimiter.\nIn other words, we can write the previous global command, like this:\n:g;console.log;d_The global command that we just gone through will delete all the console.log in current file. If we want to specify the area of console.log we want to delete, we can add range to global command.\nLet\u0026rsquo;s take a look at the snippet we are using:\nconst app = require(\u0026#39;./jest-example\u0026#39;); const math = require(\u0026#39;./math\u0026#39;); describe(\u0026#39;app operation\u0026#39;, () =\u0026gt; { const multiplyMock = jest.spyOn(math, \u0026#39;multiply\u0026#39;); multiplyMock.mockReturnValue(\u0026#39;itu\u0026#39;); test(\u0026#39;call math.add()\u0026#39;, () =\u0026gt; { const add = jest.spyOn(math, \u0026#39;add\u0026#39;); add.mockImplementation(() =\u0026gt; \u0026#39;anu\u0026#39;); console.log(app.doAdd(1, 2)); expect(app.doAdd(1, 2)).toBe(\u0026#39;anu\u0026#39;); add.mockRestore(); console.log(app.doAdd(1, 2)); expect(app.doAdd(1, 2)).toBe(3); }); test(\u0026#39;call math.subtract()\u0026#39;, () =\u0026gt; { const subtract = jest.spyOn(math, \u0026#39;subtract\u0026#39;); subtract.mockImplementation(() =\u0026gt; \u0026#39;nganu\u0026#39;); console.log(app.doSubtract(1, 2)); expect(app.doSubtract(1, 2)).toBe(\u0026#39;nganu\u0026#39;); }); test(\u0026#39;call math.subtract() again\u0026#39;, () =\u0026gt; { console.log(app.doSubtract(1, 2)); }); test(\u0026#39;call math.multiply()\u0026#39;, () =\u0026gt; { console.log(app.doMultiply(1, 2)); }); }); And let\u0026rsquo;s say that our cursor in the line test('call math.subtract()', () =\u0026gt; { and we want to delete the console.log in test('call math.add()', () =\u0026gt; { which is before the line we\u0026rsquo;re currently in.\nWith that in mind, we can do something like this:\n:?test?;/});/g;console.log;d_Here\u0026rsquo;s the breakdown of those command:\n ?test? will search word test on previous line. ; after ?test? is a special offset which tell vim that we will use another search command. For more info, we can check :help //;. /});/ will search after the result of previous search. g;console.log;d_ is a global command to delete console.log in the scope of previous search.  Substitute Command The downside of global command is that there\u0026rsquo;s no confirm option, so we might delete something we don\u0026rsquo;t want to. If we want a confirm option, we can use substitute command.\nIf we want to delete all the console.log in current file, we can do it like this:\n:%s;.*console.log.*\\n;;cHere\u0026rsquo;s the breakdown of those command:\n % symbol to tell vim that the range is the current file or all the line in the file. s is the abbreviation of substitute command. .*console.log.*\\n is the pattern that select the line that has console.log in it, which include the newline character at the end. ;; is basically telling vim to replace it with nothing. c is a confirm option.  We can also combine substitute command with global command, like this:\n:g;console.log;s;.*\\n;;cConclusion There\u0026rsquo;s a lot of possibility with global and substitute command and we won\u0026rsquo;t be able to cover all of those in one blog post. So, i will leave it to you to explore those possibility.\nYou might want to learn regular expression to enhance the global and substitute command experience.\nAlright, that\u0026rsquo;s it for this post. Thank you for reading!\n"},{"ref":"https://bruhtus.github.io/posts/clean-up-untracked-file-in-git-repo/","title":"Clean Up Untracked File in Git Repo","section":"posts","tags":["Notes","Linux","Shell","Git"],"date":"2022.08.20","body":"Have you ever feels like deleting all the untracked file or directory in git repository is such a pain?\nIf you do, then this post might be for you!\nOk, first thing first, there is a git command clean which help us delete the untracked file. We can even use it with interactive interface. To invoke the interactive interface, we can use this command:\ngit clean -i . What that command does is prompt us an interactive interface with all the untracked file in current directory.\nTo make it start from the root of git repository, we can use this command:\ngit clean -i $(git rev-parse --show-toplevel) The git rev-parse --show-toplevel will get us the path of current git repository root. If you don\u0026rsquo;t know what i mean by git repository root, we can think of it as the directory or path that has .git directory.\nBut, the clean command has a downside. The clean command does not let us select specific file under untracked directory. It will only let us delete the entire untracked directory with all the file in it.\nTo get around this issue, we can make a shell alias like this:\nalias gurm=\u0026#39;git ls-files --others --exclude-standard | fzf --multi | xargs -r rm -v\u0026#39;  You can change gurm to anything you want.\n The dependencies from shell alias above are:\n git fzf xargs  git ls-files --others --exclude-standard will list all the untracked file and also exclude the file from .gitignore.\nfzf is a fuzzy finder to select the untracked file we want to remove, we also give flags --multi so that we can select multiple file with tab key.\nFinally, we execute rm command with xargs -r. What xargs -r do is make sure that we have some input from standard input (stdin), if there is no input from stdin, xargs will not execute the command. It is useful to prevent an error from a command that require an argument.\nAlright, that\u0026rsquo;s all. Have a nice day!\n"},{"ref":"https://bruhtus.github.io/posts/awk-print-row-instead-of-column/","title":"Awk Print Row Instead of Column","section":"posts","tags":["Notes","Linux","Shell"],"date":"2022.06.18","body":"Main Course Let\u0026rsquo;s say we have an output from xrandr --listactivemonitor like this:\nMonitors: 2 0: +*eDP-1 1920/344x1080/194+1920+0 eDP-1 1: +HDMI-2 1920/480x1080/270+0+0 HDMI-2 Now, we want to display only the second row which is this line:\n0: +*eDP-1 1920/344x1080/194+1920+0 eDP-1 We can do that using awk with this command:\nxrandr --listactivemonitor | awk \u0026#39;NR==2\u0026#39; or using process substitution command, like this:\nawk \u0026#39;NR==2\u0026#39; \u0026lt;(xrandr --listactivemonitor) If we also want to limit the row and the column, let\u0026rsquo;s say the second row and the third column which is result in this:\n1920/344x1080/194+1920+0 We can do that with this command:\nxrandr --listactivemonitor | awk \u0026#39;NR==2 {print $3}\u0026#39; or using process substitution command, like this:\nawk \u0026#39;NR==2 {print $3}\u0026#39; \u0026lt;(xrandr --listactivemonitor) Now, if we want to display the second to last row, which is this line:\n0: +*eDP-1 1920/344x1080/194+1920+0 eDP-1 1: +HDMI-2 1920/480x1080/270+0+0 HDMI-2 We can do that with this command:\nxrandr --listactivemonitor | awk \u0026#39;NR\u0026gt;=2\u0026#39; or using process substitution command, like this:\nawk \u0026#39;NR\u0026gt;=2\u0026#39; \u0026lt;(xrandr --listactivemonitor) Alright, that\u0026rsquo;s all. Thanks for reading and happy shell scripting!\nReference  Stackoverflow answer about awk for specific row .  "},{"ref":"https://bruhtus.github.io/posts/shell-process-substitution-as-temp-file/","title":"Shell Process Substitution as Temp File","section":"posts","tags":["Notes","Linux","Shell"],"date":"2022.06.11","body":"A Brief Intro This is all started when i\u0026rsquo;m trying to make a shell alias using fzf and git add -p command. And i was surprised that the interactive selection from git add -p immediately terminated before i can even press any key. Let\u0026rsquo;s get started, shall we?\nFirst Attempt My first attempt to make that shell alias was something like this:\nalias gap=\u0026#39;git status -s | awk \u0026#34;{print \\$2}\u0026#34; | fzf | xargs -r git add -p\u0026#39; Let me briefly explain one by one the command that i use in my shell alias:\n  git status -s -\u0026gt; The short format of git status, without unnecessary info (at least for me).\n  awk \u0026quot;{print \\$2}\u0026quot; -\u0026gt; Only use the second column. The backslash is to prevent shell to expand $2 into a second argument instead of a second column in awk.\n  fzf -\u0026gt; Fuzzy finder by Junegunn1.\n  xargs -r -\u0026gt; Do not run the command if there\u0026rsquo;s no standard input.\n  git add -p -\u0026gt; To add a chunk of changes, only works if the file already tracked by git.\n  This alias is where the problem arise. After i select the file name using fzf, the interactive interface of git add -p only appear for a few seconds and then terminated.\nAccording to stackoverflow answer2:\n Without further arguments xargs does not work with interactive (command line) applications.\nThe reason for that is, by default xargs gets its input from stdin but interactive applications also expect input from stdin.\nTo prevent the applications from grabbing input that is intended for xargs, xargs redirects stdin from /dev/null for the applications it runs.\nThis leads to the application just receiving an EOF3.\n With that in mind, we need to use --arg-file=\u0026lt;file\u0026gt; or -a \u0026lt;file\u0026gt; flag, which means that xargs will read from a \u0026lt;file\u0026gt; instead of stdin ( standard input) so that the stdin remains unchanged. Alright, let\u0026rsquo;s go to the second attempt.\nSecond Attempt Following the stackoverflow answer2, my second attempt was something like this:\nalias gap=\u0026#39;xargs -a \u0026lt;(git status -s | awk \u0026#34;{print \\$2}\u0026#34; | fzf) git add -p\u0026#39; The expression \u0026lt;(git status -s | awk \u0026quot;{print \\$2}\u0026quot; | fzf) is what we called process substitution (or to be precise, shell process substitution).\nInstead of using a file, we use a command to act like a temporary file.\nNow, the problem is, in my experiment i can\u0026rsquo;t use fzf with the shell process substitution because shell process substitution produces a special file that can only be opened and read, but not written or seeked4.\nCommands that treat their arguments as pure streams will works with shell process substitution, but the commands that seek a file they are given (or write to a file) won\u0026rsquo;t work4.\nAnd that is why we can\u0026rsquo;t use interactive command such as fzf with shell process substitution.\nConclusion With all the information from my experiment before, i decided to remove fzf from the alias, which result with this alias:\nalias gap=\u0026#39;xargs -a \u0026lt;(git status -s | awk \u0026#34;{print \\$2}\u0026#34;) git add -p\u0026#39; Is it fulfilling what i need? Not really, i might replace that with shell function instead of shell alias soon. But, i learn something new about shell process substitution.\nExtra Note For more info about the xargs and git flags, check the manpage. For example: man xargs or man git-add.\nIf we use echo with shell process substitution like this:\necho \u0026lt;(git status -s) That will show us where the temporary file created.\n  Fuzzy finder by Junegunn .\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Stackoverflow: xargs explanation .\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Triggering EOF explanation .\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Process substitution result in special file .\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"ref":"https://bruhtus.github.io/posts/replacement-for-info-command/","title":"Replacement For Info Command","section":"posts","tags":["Notes","Linux","Shell"],"date":"2022.06.11","body":"A Brief Intro Sometime ago, someone posted a tweet about a replacement for rm -rf $HOME/directory that is mv $HOME/directory /dev/null. When i took a look of it, using the ls -l /dev/null command, i found something like this:\ncrw-rw-rw- 1 root root 1, 3 Jun 11 04:21 /dev/null Now, what is c in the crw below\ncrw-rw-rw- 1 root root 1, 3 Jun 11 04:21 /dev/null After going around on internet, i found an answer in stackexchange1. Which explain that c stands for character special file. Please keep in mind that everything in unix-like system is a file, even a directory (or some people called it folder) is a file with type directory.\n The file we usually use has a type of regular file.\n In the stackexchange, someone mentioned about info ls to show the file type with their respective character symbol. That\u0026rsquo;s what pique my interest, the info command.\nReplacement For info Command When i use the command info ls, i noticed that i can\u0026rsquo;t use j and k for navigation, which is a nightmare.\nSo, the first thing that i need to figure out is, how to change the pager used in info command. According to this stackexchange answer2, \u0026ldquo;info doesn\u0026rsquo;t use separate pager because it handles navigation\u0026rdquo;. So, basically there\u0026rsquo;s no hope with info command? Probably.\nAnd then, the person who answer on the stackexchange also give a suggestion about pinfo which, at least use j and k as down or up movement. Now i need to read the manpage about pinfo to configure it.\nWhat\u0026rsquo;s Next? Other than trying to configure pinfo, i might need to figure out what is the info documents is all about. This might be a new kind of documentation other than manpage that i can use (if the developer support it). Also, figure out about the character special file type.\n  Stackexchange: The meaning of c in crw-rw-rw- \u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Stackexchange: Replacement for info command \u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "}]